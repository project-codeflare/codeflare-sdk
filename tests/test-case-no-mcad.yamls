---
apiVersion: ray.io/v1alpha1
kind: RayCluster
metadata:
  labels:
    controller-tools.k8s.io: '1.0'
    workload.codeflare.dev/appwrapper: unit-test-cluster-ray
  name: unit-test-cluster-ray
  namespace: ns
spec:
  autoscalerOptions:
    idleTimeoutSeconds: 60
    imagePullPolicy: Always
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 500m
        memory: 512Mi
    upscalingMode: Default
  enableInTreeAutoscaling: false
  headGroupSpec:
    rayStartParams:
      block: 'true'
      dashboard-host: 0.0.0.0
      num-gpus: '0'
    serviceType: ClusterIP
    template:
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: unit-test-cluster-ray
                  operator: In
                  values:
                  - unit-test-cluster-ray
        containers:
        - env:
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: RAY_USE_TLS
            value: '0'
          - name: RAY_TLS_SERVER_CERT
            value: /home/ray/workspace/tls/server.crt
          - name: RAY_TLS_SERVER_KEY
            value: /home/ray/workspace/tls/server.key
          - name: RAY_TLS_CA_CERT
            value: /home/ray/workspace/tls/ca.crt
          image: quay.io/project-codeflare/ray:latest-py39-cu118
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - ray stop
          name: ray-head
          ports:
          - containerPort: 6379
            name: gcs
          - containerPort: 8265
            name: dashboard
          - containerPort: 10001
            name: client
          resources:
            limits:
              cpu: 2
              memory: 8G
              nvidia.com/gpu: 0
            requests:
              cpu: 2
              memory: 8G
              nvidia.com/gpu: 0
        imagePullSecrets:
        - name: unit-test-pull-secret
  rayVersion: 2.7.0
  workerGroupSpecs:
  - groupName: small-group-unit-test-cluster-ray
    maxReplicas: 2
    minReplicas: 2
    rayStartParams:
      block: 'true'
      num-gpus: '7'
    replicas: 2
    template:
      metadata:
        annotations:
          key: value
        labels:
          key: value
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: unit-test-cluster-ray
                  operator: In
                  values:
                  - unit-test-cluster-ray
        containers:
        - env:
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: RAY_USE_TLS
            value: '0'
          - name: RAY_TLS_SERVER_CERT
            value: /home/ray/workspace/tls/server.crt
          - name: RAY_TLS_SERVER_KEY
            value: /home/ray/workspace/tls/server.key
          - name: RAY_TLS_CA_CERT
            value: /home/ray/workspace/tls/ca.crt
          image: quay.io/project-codeflare/ray:latest-py39-cu118
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - ray stop
          name: machine-learning
          resources:
            limits:
              cpu: 4
              memory: 6G
              nvidia.com/gpu: 7
            requests:
              cpu: 3
              memory: 5G
              nvidia.com/gpu: 7
        imagePullSecrets:
        - name: unit-test-pull-secret
        initContainers:
        - command:
          - sh
          - -c
          - until nslookup $RAY_IP.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local;
            do echo waiting for myservice; sleep 2; done
          image: quay.io/project-codeflare/busybox:latest
          name: init-myservice
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ray-dashboard-unit-test-cluster-ray
  namespace: ns
spec:
  rules:
  - host: ray-dashboard-unit-test-cluster-ray-ns.apps.cluster.awsroute.org
    http:
      paths:
      - backend:
          service:
            name: unit-test-cluster-ray-head-svc
            port:
              number: 8265
        path: /
        pathType: Prefix
